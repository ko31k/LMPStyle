/**
 * ===========================================================================
 * üá∫üá¶ UKRAINIAN ENHANCEMENT PLUGIN FOR LAMPA
 * –í–µ—Ä—Å—ñ—è: 2.1
 * –ê–≤—Ç–æ—Ä: –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ —Å–ø—ñ–ª—å–Ω–æ—Ç–∞
 * 
 * –û–ü–ò–° –ü–õ–ê–ì–Ü–ù–£:
 * - –î–æ–¥–∞—î —É–∫—Ä–∞—ó–Ω—Å—å–∫—É —Å–∏–º–≤–æ–ª—ñ–∫—É (–ø—Ä–∞–ø–æ—Ä—Ü—ñ) –¥–æ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
 * - –í–∏–∫–æ–Ω—É—î —Ç–µ–∫—Å—Ç–æ–≤—ñ –∑–∞–º—ñ–Ω–∏ —Ä–æ—Å—ñ–π—Å—å–∫–∏—Ö —Å–ª—ñ–≤ –Ω–∞ —É–∫—Ä–∞—ó–Ω—Å—å–∫—ñ
 * - –î–æ–¥–∞—î –∫–æ–ª—å–æ—Ä–æ–≤—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ –¥–ª—è —Ç–æ—Ä—Ä–µ–Ω—Ç—ñ–≤ (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–æ–∑–¥–∞—á, —è–∫—ñ—Å—Ç—å, —Ç—Ä–µ–∫–µ—Ä–∏)
 * - –î–æ–¥–∞—î —Ä–∞–º–∫—É –Ω–∞–≤–∫–æ–ª–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–ª–æ–∫—É —Ç–æ—Ä—Ä–µ–Ω—Ç—É —Ç–∞ –∫–æ–ª—å–æ—Ä–æ–≤—É —Ä–∞–º–∫—É –¥–ª—è —Ä–æ–∑–¥–∞—é—á–∏—Ö
 * - –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è TV-—Ä–µ–∂–∏–º—É Lampa
 * - –ü—ñ–¥—Ç—Ä–∏–º—É—î –∞–¥–∞–ø—Ç–∏–≤–Ω–∏–π –¥–∏–∑–∞–π–Ω –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
 * 
 * –§–£–ù–ö–¶–Ü–û–ù–ê–õ:
 * 1. –¢–µ–∫—Å—Ç–æ–≤—ñ –∑–∞–º—ñ–Ω–∏ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –ø—Ä–∞–ø–æ—Ä—Ü—ñ–≤
 * 2. –í—ñ–∑—É–∞–ª—å–Ω—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ —è–∫–æ—Å—Ç—ñ —Ç–æ—Ä—Ä–µ–Ω—Ç—ñ–≤
 * 3. –†–∞–º–∫–∞ –Ω–∞–≤–∫–æ–ª–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –±–ª–æ–∫—É —Ç–∞ –∫–æ–ª—å–æ—Ä–æ–≤–∞ —Ä–∞–º–∫–∞ –¥–ª—è "—Ä–æ–∑–¥–∞—é—Ç—å"
 * 4. –ü—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Å—Ç—É–¥—ñ–π –æ–∑–≤—É—á–µ–Ω–Ω—è
 * 5. –û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
 * ===========================================================================
 */

(function(){
    // ===================== –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø –ü–†–ê–ü–û–†–¶–Ø =====================
    // SVG –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –£–∫—Ä–∞—ó–Ω–∏ –ë–ï–ó –≤–±—É–¥–æ–≤–∞–Ω–∏—Ö —Å—Ç–∏–ª—ñ–≤ - –ª–∏—à–µ –≤–µ–∫—Ç–æ—Ä–Ω—ñ –¥–∞–Ω—ñ
    // –í–∏–¥–∞–ª–µ–Ω–æ width, height, style –∑ SVG —â–æ–± CSS –º–∞–≤ –ø–æ–≤–Ω–∏–π –∫–æ–Ω—Ç—Ä–æ–ª—å
    const UKRAINE_FLAG_SVG = '<svg viewBox="0 0 20 15"><rect width="20" height="7.5" y="0" fill="#0057B7"/><rect width="20" height="7.5" y="7.5" fill="#FFD700"/></svg>';

    // ===================== –°–ò–°–¢–ï–ú–ê –¢–ï–ö–°–¢–û–í–ò–• –ó–ê–ú–Ü–ù =====================
    // –í–∞–∂–ª–∏–≤–∏–π –ø–æ—Ä—è–¥–æ–∫: —Å–ø–æ—á–∞—Ç–∫—É –¥–æ–≤—à—ñ —Å–ª–æ–≤–∞, –ø–æ—Ç—ñ–º –∫–æ—Ä–æ—Ç—à—ñ
    // –î–æ–¥–∞–Ω–æ –º–∞—Ä–∫–µ—Ä–∏ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó –æ–±—Ä–æ–±–∫–∏
    const REPLACEMENTS = [
        // ---------- –ü–µ—Ä—à–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: —Å–∫–ª–∞–¥–Ω—ñ —Ç–∞ –¥–æ–≤—à—ñ —Å–ª–æ–≤–∞ ----------
        ['Uaflix', 'UAFlix'],                    // –ó–∞–º—ñ–Ω–∞ –±—Ä–µ–Ω–¥—É (–≤—ñ–¥ Zetvideo –¥–æ UAFlix)
        ['Zetvideo', 'UaFlix'],                  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞ –Ω–∞–∑–≤–∞ —Å–µ—Ä–≤—ñ—Å—É
        ['–ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞', '–Ü—Å—Ç–æ—Ä—ñ—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤—ñ–¥—Å—É—Ç–Ω—è'], // –ü–µ—Ä–µ–∫–ª–∞–¥ —Ä–æ—Å—ñ–π—Å—å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç—É
        ['–î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π', '–î—É–±–ª—å–æ–≤–∞–Ω–∏–π'],        // –ö–æ—Ä–µ–∫—Ü—ñ—è —Ç–µ—Ä–º—ñ–Ω—É –¥—É–±–ª—é–≤–∞–Ω–Ω—è
        ['–î—É–±–ª—è–∂', '–î—É–±–ª—å–æ–≤–∞–Ω–∏–π'],               // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç —Ç–µ—Ä–º—ñ–Ω—É
        ['–ú–Ω–æ–≥–æ–≥–æ–ª–æ—Å—ã–π', '–ë–∞–≥–∞—Ç–æ–≥–æ–ª–æ—Å–∏–π'],       // –ü–µ—Ä–µ–∫–ª–∞–¥ —Ç–∏–ø—É –æ–∑–≤—É—á–µ–Ω–Ω—è
        
        // ---------- –î—Ä—É–≥–∏–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: —Å–ª–æ–≤–∞ –∑ –ø—Ä–∞–ø–æ—Ä–∞–º–∏ ----------
        ['–£–∫—Ä–∞–∏–Ω—Å–∫–∏–π', UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é'], // –ü–æ–≤–Ω–∞ —Ñ–æ—Ä–º–∞ –∑ –ø—Ä–∞–ø–æ—Ä–æ–º (—Ä–æ—Å—ñ–π—Å—å–∫–∞)
        ['–£–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π', UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é'], // –ü–æ–≤–Ω–∞ —Ñ–æ—Ä–º–∞ –∑ –ø—Ä–∞–ø–æ—Ä–æ–º (—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞)
        ['–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è', UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é'], // –ñ—ñ–Ω–æ—á–∞ —Ñ–æ—Ä–º–∞ –∑ –ø—Ä–∞–ø–æ—Ä–æ–º (—Ä–æ—Å—ñ–π—Å—å–∫–∞)
        ['–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é'], // –ñ—ñ–Ω–æ—á–∞ —Ñ–æ—Ä–º–∞ –∑ –ø—Ä–∞–ø–æ—Ä–æ–º (—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞)
        ['1+1', UKRAINE_FLAG_SVG + ' 1+1'],      // –¢–µ–ª–µ–∫–∞–Ω–∞–ª 1+1 –∑ –ø—Ä–∞–ø–æ—Ä–æ–º
        
        // ---------- –¢—Ä–µ—Ç—ñ–π –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç: —Ä–µ–≥—É–ª—è—Ä–Ω—ñ –≤–∏—Ä–∞–∑–∏ –∑ —É–º–æ–≤–∞–º–∏ ----------
        // –î–æ–¥–∞–Ω–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ø—Ä–∞–ø–æ—Ä–∞ –ø–µ—Ä–µ–¥ –∑–∞–º—ñ–Ω–æ—é
        {
            pattern: /\bUkr\b/gi,
            replacement: UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é',
            condition: (text) => !text.includes('flag-container') // –ù–µ –∑–∞–º—ñ–Ω—é—î–º–æ —è–∫—â–æ –≤–∂–µ —î –ø—Ä–∞–ø–æ—Ä
        },
        {
            pattern: /\bUa\b/gi, 
            replacement: UKRAINE_FLAG_SVG + ' UA',
            condition: (text) => !text.includes('flag-container') // –ù–µ –∑–∞–º—ñ–Ω—é—î–º–æ —è–∫—â–æ –≤–∂–µ —î –ø—Ä–∞–ø–æ—Ä
        }
    ];

    // ===================== –°–ò–°–¢–ï–ú–ê –£–ö–†–ê–á–ù–°–¨–ö–ò–• –°–¢–£–î–Ü–ô –û–ó–í–£–ß–ï–ù–ù–Ø =====================
    const UKRAINIAN_STUDIOS = [
        'DniproFilm', '–î–Ω—ñ–ø—Ä–æ—Ñ—ñ–ª—å–º', '–¶—ñ–∫–∞–≤–∞ –Ü–¥–µ—è', '–ö–æ–ª–æ–¥—ñ–π –¢—Ä–µ–π–ª–µ—Ä—ñ–≤', 
        'UaFlix', 'BaibaKo', '–í –æ–¥–Ω–µ —Ä–∏–ª–æ', '–¢–∞–∫ –¢—Ä–µ–±–∞ –ü—Ä–æ–¥–∞–∫—à–Ω', 
        'TreleMore', '–ì—É—Ä—Ç–æ–º', 'Exit Studio', 'FilmUA', 'Novator Film', 
        'LeDoyen', 'Postmodern', 'Pryanik', 'CinemaVoice', 'UkrainianVoice'
    ];

    // ===================== –°–ò–°–¢–ï–ú–ê –°–¢–ò–õ–Ü–í –î–õ–Ø –ü–†–ê–ü–û–†–¶–Ø –¢–ê –¢–û–†–†–ï–ù–¢–Ü–í =====================
    const FLAG_STYLES = `
        /* ===================== –°–¢–ò–õ–Ü –î–õ–Ø –ü–†–ê–ü–û–†–¶–Ø ===================== */
        /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø—Ä–∞–ø–æ—Ä–∞ —Ç–∞ —Ç–µ–∫—Å—Ç—É - –∑–∞–±–µ–∑–ø–µ—á—É—î —Ç–æ—á–Ω–µ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è */
        .flag-container {
            display: inline-flex;                /* –ì–Ω—É—á–∫–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —Ä—è–¥–∫—É */
            align-items: center;                 /* –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–µ —Ü–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è –≤–º—ñ—Å—Ç—É */
            vertical-align: middle;              /* –í–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è –ø–æ —Å–µ—Ä–µ–¥–∏–Ω—ñ —Ä—è–¥–∫–∞ */
            height: 1.27em;                      /* –ê–¥–∞–ø—Ç–∏–≤–Ω–∞ –≤–∏—Å–æ—Ç–∞ (–µ–º—ñ–≤—Å—å–∫—ñ –æ–¥–∏–Ω–∏—Ü—ñ) */
            margin-left: 3px;                    /* –í—ñ–¥—Å—Ç—É–ø –∑–ª—ñ–≤–∞ 3px (–∑–±—ñ–ª—å—à–µ–Ω–æ –Ω–∞ 1px) */
        }
        
        /* –°—Ç–∏–ª—ñ –±–µ–∑–ø–æ—Å–µ—Ä–µ–¥–Ω—å–æ –¥–ª—è SVG –ø—Ä–∞–ø–æ—Ä–∞ */
        .flag-svg {
            display: inline-block;               /* –ë–ª–æ–∫–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç –≤ –ø–æ—Ç–æ–∫—ñ —Ç–µ–∫—Å—Ç—É */
            vertical-align: middle;              /* –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–µ —Ü–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è –≤ —Ä—è–¥–∫—É */
            margin-right: 2px;                   /* –ó–º–µ–Ω—à–µ–Ω–∏–π –≤—ñ–¥—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ (2px) */
            margin-top: -5.5px;                  /* –¢–æ—á–Ω–∞ –∫–æ—Ä–µ–∫—Ü—ñ—è –ø–æ–∑–∏—Ü—ñ—ó –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª—ñ */
            border-radius: 5px;                  /* –ó–∞–∫—Ä—É–≥–ª–µ–Ω—ñ –∫—É—Ç–∏ –¥–ª—è —Å—É—á–∞—Å–Ω–æ–≥–æ –≤–∏–≥–ª—è–¥—É */
            box-shadow: 0 2px 4px rgba(0,0,0,0.2); /* –õ–µ–≥–∫–∞ —Ç—ñ–Ω—å –¥–ª—è 3D –µ—Ñ–µ–∫—Ç—É */
            border: 1px solid rgba(0,0,0,0.15);  /* –¢–æ–Ω–∫–∞ —Ä–∞–º–∫–∞ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞—Å—Ç—É */
            width: 22.56px;                      /* –ó–º–µ–Ω—à–µ–Ω–∞ —à–∏—Ä–∏–Ω–∞ –Ω–∞ 10% (25px - 10% = 22.5px) */
            height: 17.14px;                     /* –ó–º–µ–Ω—à–µ–Ω–∞ –≤–∏—Å–æ—Ç–∞ –Ω–∞ 10% (19px - 10% = 17.1px) */
        }
        
        /* –°—Ç–∏–ª—ñ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ (–µ–∫—Ä–∞–Ω –º–µ–Ω—à–µ 768px) */
        @media (max-width: 767px) {
            .flag-svg {
                width: 16.03px;                  /* –ó–º–µ–Ω—à–µ–Ω–∞ —à–∏—Ä–∏–Ω–∞ –Ω–∞ 15% (18.75px - 15% = 15.94px) */
                height: 12.19px;                 /* –ó–º–µ–Ω—à–µ–Ω–∞ –≤–∏—Å–æ—Ç–∞ –Ω–∞ 15% (14.25px - 15% = 12.11px) */
                margin-right: 1px;               /* –ó–º–µ–Ω—à–µ–Ω–∏–π –≤—ñ–¥—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö */
                margin-top: -4px;                /* –°–∫–æ—Ä–∏–≥–æ–≤–∞–Ω–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è */
            }
        }
        
        /* –°—Ç–∏–ª—ñ –¥–ª—è —Ç–µ–∫—Å—Ç—ñ–≤ –ø–æ—Ä—É—á –∑ –ø—Ä–∞–ø–æ—Ä–æ–º - –∑–∞–±–µ–∑–ø–µ—á—É—é—Ç—å —É–∑–≥–æ–¥–∂–µ–Ω–µ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è */
        .flag-container ~ span,
        .flag-container + * {
            vertical-align: middle;              /* –¶–µ–Ω—Ç—Ä—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø—Ä–∞–ø–æ—Ä–∞ */
        }
        
        /* –ú–∞—Ä–∫–µ—Ä –¥–ª—è –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ - –∑–∞–ø–æ–±—ñ–≥–∞—î –ø–æ–≤—Ç–æ—Ä–Ω—ñ–π –æ–±—Ä–æ–±—Ü—ñ */
        .ua-flag-processed {
            position: relative;
        }

        /* ===================== –°–¢–ò–õ–Ü –î–õ–Ø –¢–û–†–†–ï–ù–¢-–ë–õ–û–ö–Ü–í ===================== */
        /* –û—Å–Ω–æ–≤–Ω–∏–π —Å—Ç–∏–ª—å –¥–ª—è —Ç–æ—Ä—Ä–µ–Ω—Ç-–±–ª–æ–∫—ñ–≤ - –û–î–ù–ê –†–ê–ú–ö–ê –ù–ê–í–ö–û–õ–û –í–°–¨–û–ì–û –ë–õ–û–ö–£ */
        .torrent-item {
            position: relative;
            margin: 12px 0;
            padding: 16px;
            border-radius: 12px;
            background: rgba(30, 30, 35, 0.7);
            transition: all 0.3s ease;
            border: 2px solid rgba(100, 100, 110, 0.3); /* –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ —Å—ñ—Ä–∞ —Ä–∞–º–∫–∞ */
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
        }

        /* –ï—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ –¥–ª—è –∫—Ä–∞—â–æ—ó —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ */
        .torrent-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
            border-color: rgba(120, 120, 130, 0.5); /* –õ–µ–≥–∫–µ –ø—ñ–¥—Å–≤—ñ—á—É–≤–∞–Ω–Ω—è —Ä–∞–º–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–Ω—ñ */
        }

        /* ===================== –°–¢–ò–õ–Ü –î–õ–Ø –ë–õ–û–ö–£ "–†–û–ó–î–ê–Æ–¢–¨" –ó –ö–û–õ–¨–û–†–û–í–û–Æ –†–ê–ú–ö–û–Æ ===================== */
        /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑–¥–∞—é—á–∏—Ö */
        .seeds-info-container {
            display: inline-block;
            margin: 4px 0;
            padding: 6px 10px;
            border-radius: 8px;
            background: rgba(40, 40, 45, 0.8);
            border: 2px solid transparent;
            transition: all 0.3s ease;
        }

        /* –ö–æ–ª—å–æ—Ä–æ–≤—ñ —Ä–∞–º–∫–∏ –¥–ª—è –±–ª–æ–∫—É "—Ä–æ–∑–¥–∞—é—Ç—å" –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Ä–æ–∑–¥–∞—é—á–∏—Ö */
        .seeds-info-container.low-seeds-border {
            border-color: #8B4513 !important; /* –¢–µ–º–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤–∏–π –¥–ª—è –º–∞–ª–æ —Ä–æ–∑–¥–∞—é—á–∏—Ö */
            background: linear-gradient(135deg, rgba(40, 40, 45, 0.9), rgba(139, 69, 19, 0.15));
        }

        .seeds-info-container.medium-seeds-border {
            border-color: #B8860B !important; /* –¢–µ–º–Ω–æ-–∑–æ–ª–æ—Ç–∏–π –¥–ª—è —Å–µ—Ä–µ–¥–Ω—å–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ */
            background: linear-gradient(135deg, rgba(40, 40, 45, 0.9), rgba(184, 134, 11, 0.15));
        }

        .seeds-info-container.high-seeds-border {
            border-color: #2F4F2F !important; /* –¢–µ–º–Ω–æ-–æ–ª–∏–≤–∫–æ–≤–∏–π –¥–ª—è –±–∞–≥–∞—Ç—å–æ—Ö —Ä–æ–∑–¥–∞—é—á–∏—Ö */
            background: linear-gradient(135deg, rgba(40, 40, 45, 0.9), rgba(47, 79, 47, 0.15));
        }

        /* –°—Ç–∏–ª—ñ –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ç–æ—Ä—Ä–µ–Ω—Ç */
        .torrent-info {
            margin: 8px 0;
            padding: 8px 12px;
            background: rgba(40, 40, 45, 0.6);
            border-radius: 8px;
            border-left: 3px solid #555;
        }

        /* –°—Ç–∏–ª—ñ –¥–ª—è –∞—É–¥—ñ–æ/–≤—ñ–¥–µ–æ –¥–æ—Ä—ñ–∂–æ–∫ */
        .track-item {
            display: inline-block;
            margin: 4px 8px 4px 0;
            padding: 4px 8px;
            background: rgba(50, 50, 55, 0.6);
            border-radius: 6px;
            border: 1px solid rgba(100, 100, 110, 0.3);
        }

        /* ===================== –Ü–ù–î–ò–ö–ê–¢–û–†–ò –Ø–ö–û–°–¢–Ü –¢–û–†–†–ï–ù–¢–Ü–í ===================== */
        /* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ —è–∫–æ—Å—Ç—ñ (–±—ñ—Ç—Ä–µ–π—Ç) */
        .torrent-item__bitrate span.low-bitrate {
            color: #B8860B !important; /* –¢–µ–º–Ω–æ-–∑–æ–ª–æ—Ç–∏–π */
            font-weight: bold;
        }
        .torrent-item__bitrate span.medium-bitrate {
            color: #2F4F2F !important; /* –¢–µ–º–Ω–æ-–æ–ª–∏–≤–∫–æ–≤–∏–π */
            font-weight: bold;
        }
        .torrent-item__bitrate span.high-bitrate {
            color: #8B4513 !important; /* –¢–µ–º–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤–∏–π */
            font-weight: bold;
        }
        
        /* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä–æ–∑–¥–∞—á (Seeds) */
        .torrent-item__seeds span.low-seeds {
            color: #8B4513 !important; /* –¢–µ–º–Ω–æ-–∫–æ—Ä–∏—á–Ω–µ–≤–∏–π */
            font-weight: bold;
        }
        .torrent-item__seeds span.medium-seeds {
            color: #B8860B !important; /* –¢–µ–º–Ω–æ-–∑–æ–ª–æ—Ç–∏–π */
            font-weight: bold;
        }
        .torrent-item__seeds span.high-seeds {
            color: #2F4F2F !important; /* –¢–µ–º–Ω–æ-–æ–ª–∏–≤–∫–æ–≤–∏–π */
            font-weight: bold;
        }
        
        /* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ —Ç—Ä–µ–∫–µ—Ä—ñ–≤ */
        .torrent-item__tracker.utopia {
            color: #7B68EE !important; /* –ü—Ä–∏–≥–ª—É—à–µ–Ω–∏–π —Ñ—ñ–æ–ª–µ—Ç–æ–≤–∏–π */
            font-weight: bold;
        }
        .torrent-item__tracker.toloka {
            color: #5F9EA0 !important; /* –ü—Ä–∏–≥–ª—É—à–µ–Ω–∏–π –±–ª–∞–∫–∏—Ç–Ω–∏–π */
            font-weight: bold;
        }
        .torrent-item__tracker.mazepa {
            color: #BA55D3 !important; /* –ü—Ä–∏–≥–ª—É—à–µ–Ω–∏–π –ª–∞–≤–∞–Ω–¥–æ–≤–∏–π */
            font-weight: bold;
        }

        /* –°—Ç–∏–ª—ñ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ */
        @media (max-width: 767px) {
            .torrent-item {
                margin: 8px 0;
                padding: 12px;
                border-radius: 10px;
                border-width: 1.5px;
            }
            
            .seeds-info-container {
                padding: 4px 8px;
                margin: 3px 0;
                border-radius: 6px;
                border-width: 1.5px;
            }
            
            .torrent-info {
                padding: 6px 10px;
                margin: 6px 0;
            }
            
            .track-item {
                margin: 3px 6px 3px 0;
                padding: 3px 6px;
                font-size: 0.9em;
            }
        }

        /* –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Å—Ç–∏–ª—ñ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Ç–∞ –≤–∏–ø–∞–¥–∞—é—á–∏—Ö —Å–ø–∏—Å–∫—ñ–≤ */
        .filter-item .flag-svg,
        .selector-item .flag-svg,
        .dropdown-item .flag-svg,
        .voice-option .flag-svg,
        .audio-option .flag-svg {
            margin-right: 1px;                   /* –ó–º–µ–Ω—à–µ–Ω–∏–π –≤—ñ–¥—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ */
            margin-top: -2px;                    /* –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞ –∫–æ—Ä–µ–∫—Ü—ñ—è –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ */
            width: 18.05px;                      /* –ó–º–µ–Ω—à–µ–Ω–∞ —à–∏—Ä–∏–Ω–∞ –Ω–∞ 10% (20px - 10% = 18px) */
            height: 13.54px;                     /* –ó–º–µ–Ω—à–µ–Ω–∞ –≤–∏—Å–æ—Ç–∞ –Ω–∞ 10% (15px - 10% = 13.5px) */
        }

        /* –°—Ç–∏–ª—ñ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ —É —Ñ—ñ–ª—å—Ç—Ä–∞—Ö */
        @media (max-width: 767px) {
            .filter-item .flag-svg,
            .selector-item .flag-svg,
            .dropdown-item .flag-svg,
            .voice-option .flag-svg,
            .audio-option .flag-svg {
                width: 11.97px;                  /* –ó–º–µ–Ω—à–µ–Ω–∞ —à–∏—Ä–∏–Ω–∞ –Ω–∞ 15% (14px - 15% = 11.9px) */
                height: 8.98px;                  /* –ó–º–µ–Ω—à–µ–Ω–∞ –≤–∏—Å–æ—Ç–∞ –Ω–∞ 15% (10.5px - 15% = 8.93px) */
                margin-right: 0px;               /* –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –≤—ñ–¥—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ */
                margin-top: -1px;                /* –°–∫–æ—Ä–∏–≥–æ–≤–∞–Ω–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞ –ø–æ–∑–∏—Ü—ñ—è */
            }
        }

        /* –°—Ç–∏–ª—ñ –¥–ª—è –æ–ø–∏—Å—ñ–≤ –≤—ñ–¥–µ–æ - –ø–æ–∫—Ä–∞—â—É—î —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å */
        .online-prestige__description,
        .video-description,
        [class*="description"],
        [class*="info"] {
            line-height: 1.5;                    /* –ó–±—ñ–ª—å—à–µ–Ω–∏–π –º—ñ–∂—Ä—è–¥–∫–æ–≤–∏–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª */
        }
    `;

    // ===================== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –°–¢–ò–õ–Ü–í =====================
    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–∏–Ω–∞–º—ñ—á–Ω–æ–≥–æ —Å—Ç–∏–ª–µ–≤–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞
    let style = document.createElement('style'); 
    style.innerHTML = FLAG_STYLES;
    document.head.appendChild(style); // –í—Å—Ç–∞–≤–∫–∞ —Å—Ç–∏–ª—ñ–≤ –≤ –≥–æ–ª–æ–≤—É –¥–æ–∫—É–º–µ–Ω—Ç–∞

    // ===================== –°–ò–°–¢–ï–ú–ê –ó–ê–ú–Ü–ù–ò –¢–ï–ö–°–¢–£ –î–õ–Ø –§–Ü–õ–¨–¢–†–Ü–í –û–ó–í–£–ß–ï–ù–ù–Ø =====================
    function processVoiceFilters() {
        // –°–µ–ª–µ–∫—Ç–æ—Ä–∏ –¥–ª—è –≤—Å—ñ—Ö —Ç–∏–ø—ñ–≤ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –æ–∑–≤—É—á–µ–Ω–Ω—è
        const voiceFilterSelectors = [
            '[data-type="voice"]',
            '[data-type="audio"]',
            '.voice-options',
            '.audio-options',
            '.voice-list',
            '.audio-list',
            '.studio-list',
            '.translation-filter',
            '.dubbing-filter'
        ];

        // –û–±—Ä–æ–±–∫–∞ –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É —Ñ—ñ–ª—å—Ç—Ä–∞
        voiceFilterSelectors.forEach(selector => {
            try {
                const filters = document.querySelectorAll(selector);
                filters.forEach(filter => {
                    // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
                    if (filter.classList.contains('ua-voice-processed')) return;
                    
                    let html = filter.innerHTML;
                    let changed = false;
                    
                    // –î–æ–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–∏ –¥–ª—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö —Å—Ç—É–¥—ñ–π –æ–∑–≤—É—á–µ–Ω–Ω—è
                    UKRAINIAN_STUDIOS.forEach(studio => {
                        if (html.includes(studio) && !html.includes(UKRAINE_FLAG_SVG)) {
                            html = html.replace(new RegExp(studio, 'g'), UKRAINE_FLAG_SVG + ' ' + studio);
                            changed = true;
                        }
                    });

                    // –î–æ–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–∏ –¥–ª—è –∑–∞–≥–∞–ª—å–Ω–∏—Ö —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏—Ö –ø–æ–∑–Ω–∞—á–µ–Ω—å
                    if (html.includes('–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞') && !html.includes(UKRAINE_FLAG_SVG)) {
                        html = html.replace(/–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞/g, UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞');
                        changed = true;
                    }
                    if (html.includes('–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è') && !html.includes(UKRAINE_FLAG_SVG)) {
                        html = html.replace(/–£–∫—Ä–∞–∏–Ω—Å–∫–∞—è/g, UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–∞');
                        changed = true;
                    }
                    if (html.includes('Ukr') && !html.includes(UKRAINE_FLAG_SVG)) {
                        html = html.replace(/Ukr/gi, UKRAINE_FLAG_SVG + ' –£–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é');
                        changed = true;
                    }
                    
                    // –Ø–∫—â–æ –±—É–ª–∏ –∑–º—ñ–Ω–∏ - –æ–Ω–æ–≤–ª—é—î–º–æ –≤–º—ñ—Å—Ç
                    if (changed) {
                        filter.innerHTML = html;
                        filter.classList.add('ua-voice-processed');
                        
                        // –û–±—Ä–æ–±–∫–∞ SVG –ø—Ä–∞–ø–æ—Ä—Ü—ñ–≤ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è
                        filter.querySelectorAll('svg').forEach(svg => {
                            if (!svg.closest('.flag-container')) {
                                svg.classList.add('flag-svg');
                                const wrapper = document.createElement('span');
                                wrapper.className = 'flag-container';
                                svg.parentNode.insertBefore(wrapper, svg);
                                wrapper.appendChild(svg);
                            }
                        });
                    }
                });
            } catch (error) {
                console.warn('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –æ–∑–≤—É—á–µ–Ω–Ω—è:', error);
            }
        });
    }

    // ===================== –û–ü–¢–ò–ú–Ü–ó–û–í–ê–ù–ê –°–ò–°–¢–ï–ú–ê –ó–ê–ú–Ü–ù–ò –¢–ï–ö–°–¢–£ =====================
    function replaceTexts() {
        // –û–±–º–µ–∂–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ –¥–ª—è —É–Ω–∏–∫–Ω–µ–Ω–Ω—è –∑–∞–≤–∏—Å–∞–Ω–Ω—è
        const safeContainers = [
            '.online-prestige-watched__body',
            '.online-prestige--full .online-prestige__title',
            '.online-prestige--full .online-prestige__info',
            '.online-prestige__description',
            '.video-description',
            '.content__description',
            '.movie-info',
            '.series-info'
        ];

        // –ë–µ–∑–ø–µ—á–Ω–∏–π –ø–æ—à—É–∫ –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º
        const processSafeElements = () => {
            safeContainers.forEach(selector => {
                try {
                    const elements = document.querySelectorAll(selector + ':not(.ua-flag-processed)');
                    elements.forEach(element => {
                        // –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
                        if (element.closest('.hidden, [style*="display: none"]')) return;
                        
                        let html = element.innerHTML;
                        let changed = false;
                        
                        // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –≤—Å—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ –∑–∞–º—ñ–Ω–∏
                        REPLACEMENTS.forEach(item => {
                            if (Array.isArray(item)) {
                                // –û–±—Ä–æ–±–∫–∞ –∑–≤–∏—á–∞–π–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤ (—á—É—Ç–ª–∏–≤—ñ –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É)
                                if (html.includes(item[0]) && !html.includes(UKRAINE_FLAG_SVG)) {
                                    html = html.replace(new RegExp(item[0], 'g'), item[1]);
                                    changed = true;
                                }
                            } else if (item.pattern) {
                                // –û–±—Ä–æ–±–∫–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–∏—Ö –≤–∏—Ä–∞–∑—ñ–≤ –∑ —É–º–æ–≤–∞–º–∏
                                if ((!item.condition || item.condition(html)) && item.pattern.test(html) && !html.includes(UKRAINE_FLAG_SVG)) {
                                    html = html.replace(item.pattern, item.replacement);
                                    changed = true;
                                }
                            }
                        });
                        
                        // –Ø–∫—â–æ –±—É–ª–∏ –∑–º—ñ–Ω–∏ - –æ–Ω–æ–≤–ª—é—î–º–æ –≤–º—ñ—Å—Ç
                        if (changed) {
                            element.innerHTML = html;
                            element.classList.add('ua-flag-processed');
                            
                            // –û–±—Ä–æ–±–∫–∞ SVG –ø—Ä–∞–ø–æ—Ä—Ü—ñ–≤ –¥–ª—è –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è
                            element.querySelectorAll('svg').forEach(svg => {
                                // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ –Ω–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ
                                if (!svg.closest('.flag-container')) {
                                    svg.classList.add('flag-svg'); // –î–æ–¥–∞–≤–∞–Ω–Ω—è CSS –∫–ª–∞—Å—É
                                    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤–∏—Ä—ñ–≤–Ω—é–≤–∞–Ω–Ω—è
                                    const wrapper = document.createElement('span');
                                    wrapper.className = 'flag-container';
                                    svg.parentNode.insertBefore(wrapper, svg);
                                    wrapper.appendChild(svg);
                                    
                                    // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å—É—Å—ñ–¥–Ω—å–æ–≥–æ —Ç–µ–∫—Å—Ç—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                                    if (svg.nextSibling && svg.nextSibling.nodeType === 3) {
                                        wrapper.appendChild(svg.nextSibling);
                                    }
                                }
                            });
                        }
                    });
                } catch (error) {
                    console.warn('–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞:', selector, error);
                }
            });
        };

        // –í–∏–∫–æ–Ω—É—î–º–æ –æ–±—Ä–æ–±–∫—É –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º —á–∞—Å—É
        const startTime = Date.now();
        const TIME_LIMIT = 50; // 50ms –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –æ–±—Ä–æ–±–∫–∏
        
        processSafeElements();
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∞—Å —Ç–∞ –æ–±—Ä–æ–±–ª—è—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —î —á–∞—Å
        if (Date.now() - startTime < TIME_LIMIT) {
            processVoiceFilters();
        }
    }

    // ===================== –°–ò–°–¢–ï–ú–ê –û–ù–û–í–õ–ï–ù–ù–Ø –°–¢–ò–õ–Ü–í –¢–û–†–†–ï–ù–¢–Ü–í =====================
    function updateTorrentStyles() {
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –≤—Å—ñ –º–æ–∂–ª–∏–≤—ñ —Ç–æ—Ä—Ä–µ–Ω—Ç-–µ–ª–µ–º–µ–Ω—Ç–∏
        const torrentItems = document.querySelectorAll('.torrent-item, [class*="torrent"], .download-item, [class*="download"]');
        
        torrentItems.forEach(item => {
            // –î–æ–¥–∞—î–º–æ –±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å —è–∫—â–æ —â–µ –Ω–µ–º–∞—î
            if (!item.classList.contains('torrent-item')) {
                item.classList.add('torrent-item');
            }
            
            // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–æ–∑–¥–∞—é—á–∏—Ö
            let seeds = 0;
            const seedsElement = item.querySelector('.torrent-item__seeds span, [class*="seeds"] span, .seeds span');
            
            if (seedsElement) {
                seeds = parseInt(seedsElement.textContent) || 0;
            } else {
                // –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ —Ç–µ–∫—Å—Ç "–†–æ–∑–¥–∞—é—Ç—å: X" –≤ —Å–µ—Ä–µ–¥–∏–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∞
                const seedsText = item.textContent.match(/–†–æ–∑–¥–∞—é—Ç—å:\s*(\d+)/);
                if (seedsText) {
                    seeds = parseInt(seedsText[1]) || 0;
                }
            }
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ –∞–±–æ –æ–Ω–æ–≤–ª—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑–¥–∞—é—á–∏—Ö
            updateSeedsInfoContainer(item, seeds);
            
            // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è —Ç–µ–∫—Å—Ç—É (seeds, bitrate, tracker)
            updateTextStyles(item);
        });
    }

    // ===================== –§–£–ù–ö–¶–Ü–Ø –û–ù–û–í–õ–ï–ù–ù–Ø –ö–û–ù–¢–ï–ô–ù–ï–†–ê "–†–û–ó–î–ê–Æ–¢–¨" =====================
    function updateSeedsInfoContainer(container, seeds) {
        // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Ä–æ–∑–¥–∞—é—á–∏—Ö
        let seedsContainer = container.querySelector('.seeds-info-container');
        const seedsElement = container.querySelector('.torrent-item__seeds, [class*="seeds"]');
        
        if (seedsElement && !seedsContainer) {
            // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            seedsContainer = document.createElement('div');
            seedsContainer.className = 'seeds-info-container';
            
            // –ü–µ—Ä–µ–º—ñ—â—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç –∑ —Ä–æ–∑–¥–∞—é—á–∏–º–∏ –≤ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            seedsElement.parentNode.insertBefore(seedsContainer, seedsElement);
            seedsContainer.appendChild(seedsElement);
        }
        
        if (seedsContainer) {
            // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ –∫–ª–∞—Å–∏ —Ä–∞–º–æ–∫
            seedsContainer.classList.remove('low-seeds-border', 'medium-seeds-border', 'high-seeds-border');
            
            // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π –∫–ª–∞—Å —Ä–∞–º–∫–∏ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é —Ä–æ–∑–¥–∞—é—á–∏—Ö
            if (seeds <= 4) {
                seedsContainer.classList.add('low-seeds-border');        // –ú–∞–ª–æ —Ä–æ–∑–¥–∞—é—á–∏—Ö (0-4)
            } else if (seeds <= 14) {
                seedsContainer.classList.add('medium-seeds-border');     // –°–µ—Ä–µ–¥–Ω—è –∫—ñ–ª—å–∫—ñ—Å—Ç—å (5-14)
            } else {
                seedsContainer.classList.add('high-seeds-border');       // –ë–∞–≥–∞—Ç–æ —Ä–æ–∑–¥–∞—é—á–∏—Ö (15+)
            }
        }
    }

    // ===================== –§–£–ù–ö–¶–Ü–Ø –û–ù–û–í–õ–ï–ù–ù–Ø –¢–ï–ö–°–¢–û–í–ò–• –°–¢–ò–õ–Ü–í =====================
    function updateTextStyles(container) {
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è seeds (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–æ–∑–¥–∞—é—á–∏—Ö)
        const seedsSpans = container.querySelectorAll('.torrent-item__seeds span, [class*="seeds"] span');
        seedsSpans.forEach(span => {
            const seeds = parseInt(span.textContent) || 0;
            span.classList.remove('low-seeds', 'medium-seeds', 'high-seeds');
            
            if (seeds <= 4) {
                span.classList.add('low-seeds');
            } else if (seeds <= 14) {
                span.classList.add('medium-seeds');
            } else {
                span.classList.add('high-seeds');
            }
        });

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è bitrate (—è–∫—ñ—Å—Ç—å –≤—ñ–¥–µ–æ)
        const bitrateSpans = container.querySelectorAll('.torrent-item__bitrate span, [class*="bitrate"] span');
        bitrateSpans.forEach(span => {
            const bitrate = parseFloat(span.textContent) || 0;
            span.classList.remove('low-bitrate', 'medium-bitrate', 'high-bitrate');
            
            if (bitrate <= 10) {
                span.classList.add('low-bitrate');
            } else if (bitrate <= 40) {
                span.classList.add('medium-bitrate');
            } else {
                span.classList.add('high-bitrate');
            }
        });

        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∏–ª—ñ –¥–ª—è tracker (–¥–∂–µ—Ä–µ–ª–∞ —Ç–æ—Ä—Ä–µ–Ω—Ç—ñ–≤)
        const trackers = container.querySelectorAll('.torrent-item__tracker, [class*="tracker"]');
        trackers.forEach(tracker => {
            const text = tracker.textContent.trim().toLowerCase();
            tracker.classList.remove('utopia', 'toloka', 'mazepa');
            
            if (text.includes('utopia')) tracker.classList.add('utopia');
            else if (text.includes('toloka')) tracker.classList.add('toloka');
            else if (text.includes('mazepa')) tracker.classList.add('mazepa');
        });
    }

    // ===================== –û–°–ù–û–í–ù–ê –§–£–ù–ö–¶–Ü–Ø –û–ù–û–í–õ–ï–ù–ù–Ø =====================
    function updateAll() {
        try {
            replaceTexts();        // –í–∏–∫–æ–Ω–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö –∑–∞–º—ñ–Ω
            updateTorrentStyles(); // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–∑—É–∞–ª—å–Ω–∏—Ö —Å—Ç–∏–ª—ñ–≤ —Ç–æ—Ä—Ä–µ–Ω—Ç—ñ–≤
        } catch (error) {
            console.warn('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–ª–∞–≥—ñ–Ω—É:', error);
        }
    }

    // ===================== –û–ü–¢–ò–ú–Ü–ó–û–í–ê–ù–ê –°–ò–°–¢–ï–ú–ê –°–ü–û–°–¢–ï–†–ï–ñ–ï–ù–ù–Ø =====================
    let updateTimeout = null;
    const observer = new MutationObserver(mutations => {
        // –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –≤–∞–∂–ª–∏–≤—ñ –∑–º—ñ–Ω–∏
        const hasImportantChanges = mutations.some(mutation => {
            return mutation.addedNodes.length > 0 && 
                   !mutation.target.closest('.hidden, [style*="display: none"]');
        });

        // –Ø–∫—â–æ —î –≤–∞–∂–ª–∏–≤—ñ –∑–º—ñ–Ω–∏ - –∑–∞–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é
        if (hasImportantChanges) {
            clearTimeout(updateTimeout);
            updateTimeout = setTimeout(updateAll, 150); // –í—ñ–¥–∫–ª–∞–¥–µ–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è (150ms)
        }
    });

    // –ó–∞–ø—É—Å–∫ —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á–∞ –∑–∞ –∑–º—ñ–Ω–∞–º–∏ –≤ DOM
    observer.observe(document.body, { 
        childList: true,    // –°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –∑–º—ñ–Ω–æ—é –¥–æ—á—ñ—Ä–Ω—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
        subtree: true,      // –°–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –≤—Å—ñ–º–∞ –≤–∫–ª–∞–¥–µ–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏
        attributes: false,  // –í–∏–º–∫–Ω—É—Ç–∏ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏
        characterData: false // –í–∏–º–∫–Ω—É—Ç–∏ —Å–ø–æ—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞ —Ç–µ–∫—Å—Ç–æ–º
    });
    
    // –ü–µ—Ä–≤–∏–Ω–Ω–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
    setTimeout(updateAll, 1000);
})();

// ===================== –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø TV –†–ï–ñ–ò–ú–£ LAMPA =====================
Lampa.Platform.tv();
